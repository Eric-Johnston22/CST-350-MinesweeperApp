@model Minesweeper.Services.BoardService;

@if (Model.Exploded != true && Model.GameWon != true)
{
    <form>
        @for (int i = 0; i < Model.Size; i++)
        {
            @for (int j = 0; j < Model.Size; j++)
            {
                @if (Model.Grid[i, j].Visited == true)
                {
                    @if (Model.Grid[i, j].LiveNeighbors > 0)
                    {
                        <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                            <button class="clicked" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="RightButtonClick">

                                @switch (Model.Grid[i, j].LiveNeighbors)
                                {
                                    case 1:
                                        <div style="color:black">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    case 2:
                                        <div style="color:blue">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    case 3:
                                        <div style="color:green">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    case 4:
                                        <div style="color:brown">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    case 5:
                                        <div style="color:purple">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    case 6:
                                        <div style="color:yellow">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    case 7:
                                        <div style="color:darkorange">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    case 8:
                                        <div style="color:red">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                    default:
                                        <div style="color:black">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                                        break;
                                }
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                            <button class="clicked" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                            </button>
                        </div>
                    }
                }
                else
                {
                    @if(Model.Grid[i,j].Flagged==true)
                    {
                        <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                            <button class="unclicked flagged" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                                <img class="game-button-image" src="~/img/flag.jpg">
                            </button>
                        </div>
                    } else
                    {
                        <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                            <button class="unclicked" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                            </button>
                        </div>
                    }
                }
            }
            @if (i != Model.Size - 1)
            {
                <div class="line-break"></div>
            }
        }
    </form>
}
else if (Model.GameWon == true)
{

    @for (int i = 0; i < Model.Size; i++)
    {
        @for (int j = 0; j < Model.Size; j++)
        {
            @if (Model.Grid[i, j].Live == true)
            {
                <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                    <button class="unclicked flagged" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                        <img class="game-button-image" src="~/img/flag.jpg">
                    </button>
                </div>
            }
            else if (Model.Grid[i, j].LiveNeighbors > 0)
            {
                <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                    <button class="clicked" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                        <div style="color:green">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                    </button>
                </div>
            }
            else
            {
                <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                    <button class="clicked" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                    </button>
                </div>
            }
        }
        @if (i != Model.Size - 1)
        {
            <div class="line-break"></div>
        }
    }
    <div class="line-break"></div>
    <h1 style="color:green; font-size:60pt;">You Win!</h1>
}
else
{
 
    @for (int i = 0; i < Model.Size; i++)
    {
        @for (int j = 0; j < Model.Size; j++)
        {
            @if (Model.Grid[i, j].Live == true)
            {
                <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                    <img class="game-button-image" src="~/img/bomb.png">
                </div>
            }
            else if (Model.Grid[i, j].LiveNeighbors > 0)
            {
                <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                    <button class="clicked" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                        <div style="color:red">@(string.Format("{0}", Model.Grid[i, j].LiveNeighbors))</div>
                    </button>
                </div>
            }
            else
            {
                <div class="flex-box" id="@(String.Format("{0},{1}",i,j))">
                    <button class="clicked" style="border: medium solid black;" type="submit" value="@(String.Format("{0},{1}",i,j))" name="buttonNumber" asp-controller="Game" asp-action="LeftButtonClick">
                    </button>
                </div>
            }
        }
        @if (i != Model.Size - 1)
        {
            <div class="line-break"></div>
        }
    }
    <div class="line-break"></div>
    <h1 style="color:red; font-size: 60pt;">You Lost.</h1>
}